/* Variables and Mixins (keep as is or adjust as needed) */
$header-z-index-container: 3;
$header-z-index-overlay: 2;
$header-z-index-header: 100;
$spacing-1-5s: 12px;
$spacing-2s: 16px;
$breakpoint-l: 1024px;
$color-white: #fff;
$color-black: #23282a; // Use variable for consistency
$color-primary-green: #00ac46;
$color-accent-purple: #734ba5;
$color-black-16: rgb(0 0 0 / 16%);
$shadow-three: 0px 4px 8px rgb(0 0 0 / 10%);
$radius-0-5r: 4px;
$focus-state-inner-border: #fff;
$focus-state-border: #2175c2;
$focus-state-glow: rgb(55 130 205 / 24%);

@mixin media-desktop {
  @media screen and (min-width: $breakpoint-l) {
    @content;
  }
}

@mixin media-mobile {
  @media screen and (max-width: #{$breakpoint-l - 1}px) {
    @content;
  }
}

/* --- Header Button Styles --- */
.headerButton {
  cursor: pointer;

  position: relative;

  display: flex;
  align-items: center;

  border: none;

  background: transparent;

  // Base color set by parent header state
}

.headerButtonSvgPadding {
  padding: 12px;
}

.headerButtonImagePadding {
  padding: 8px;
}

.headerButtonIcon {
  svg {
    display: block; // Changed from flex for simplicity if just an icon

    width: 24px;
    height: 24px;

    // Color inherited or set by header state
    color: inherit; // Inherit color from button/header

    transition: color 0.3s ease-in-out;
  }
}

.headerButtonCount {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;

  padding: 0 5px;
  border-radius: 24px;

  font-size: 10px;
  font-weight: 500;
  line-height: 16px;
  color: $color-white;

  background: $color-accent-purple;
}

.headerButtonLabel {
  font-size: 10px;
  font-weight: 500;
  line-height: 12px;

  // Color inherited or set by header state
  color: inherit; // Inherit color from button/header

  transition: color 0.3s ease-in-out;

  @include media-desktop {
    font-size: 12px;
    line-height: 20px;
  }
}

/* --- Banner Styles --- */
.bannerContainer {
  position: relative; // Needed if an arrow were absolutely positioned

  width: 100%;
  padding: 9px 8px;

  color: $color-white;
  text-align: center;

  background-color: $color-primary-green;

  transition:
    transform 0.3s ease-in-out,
    opacity 0.3s ease-in-out; // Added transition
}

.navCenter {
  display: flex;
  flex-basis: 34%; // Example sizing
  align-items: center;
  justify-content: center;

  // Ensure link/logo scales nicely
  a {
    display: inline-block; // Good practice for links wrapping logos
    line-height: 0; // Prevent extra space below SVG logo
  }

  svg {
    // Style the Vorwerk logo if needed
    width: auto;
    height: 36px; // Example height
    color: inherit; // Inherit color from header state
    transition: color 0.3s ease-in-out;
  }
}

/* --- Main Header Styles --- */
.stickyHeader {
  // Base styles for sticky header
  position: sticky;
  z-index: $header-z-index-header;
  top: 0;

  display: flex;
  flex-direction: column;

  width: 100%;

  color: $color-white; // Default text/icon color for transparent bg

  // Default state ('at-top')
  background-color: transparent;
  box-shadow: none; // No shadow when at top

  // Transitions
  transition:
    background-color 0.3s ease-in-out,
    color 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out,
    transform 0.3s ease-in-out; // Added transform transition

  /* --- Focus Styles (keep as is) --- */
  a:focus-visible,
  button:focus-visible {
    border-radius: $radius-0-5r;
    outline: none;
    box-shadow:
      0 0 0 2px $focus-state-inner-border,
      0 0 0 4px $focus-state-border,
      0 0 0 8px $focus-state-glow;
  }

  // --- Styling based on scroll state ---

  // Styles when scrolling up OR down (i.e., not at the very top)
  &[data-scroll-state="scrolling-up"],
  &[data-scroll-state="scrolling-down"] {
    color: $color-black; // Default text/icon color for white bg
    background-color: $color-white;
    box-shadow: $shadow-three;

    // Adjust specific elements within the header for white background
    .headerButtonIcon svg,
    .headerButtonLabel {
      color: $color-black; // Explicitly set icon/label color
    }

    // Adjust Vorwerk logo link color if needed (assuming it's SVG/Text)
    .navCenter a {
      color: $color-primary-green; // Make sure logo adapts if it inherits color
    }
  }

  // Specific adjustments for scrolling down (optional: hide banner or header)
  &[data-scroll-state="scrolling-down"] {
    // Option 1: Hide only the banner
    // .bannerContainer {
    //   transform: translateY(-100%);
    //   opacity: 0;
    //   pointer-events: none;
    // }

    // Option 2: Hide the entire header (adjust transform origin if needed)
    // transform: translateY(-100%); // Hides the whole header
    // Add a delay if you want it to disappear slightly after scrolling starts
    transition-delay: 0.1s;
  }

  // When scrolling up, ensure it's visible
  &[data-scroll-state="scrolling-up"] {
    transform: translateY(0);
  }

  // Ensure visible when at top
  &[data-scroll-state="at-top"] {
    transform: translateY(0);

    // Ensure correct colors for elements when at top
    .headerButtonIcon svg,
    .headerButtonLabel {
      color: $color-white;
    }

    .navCenter a {
      color: $color-white;
    }
  }
}

/* --- Navigation Structure --- */
.headerNav {
  position: relative; // Context for potential dropdowns
  z-index: $header-z-index-container;
  width: 100%;
  padding: 0; // Remove default padding if GridContainer handles it
}

.navInner {
  display: flex;
  align-items: center;
  justify-content: space-between;

  margin: 0 -8px; // Counteract GridItem padding maybe? Review if needed.

  // Padding adjusted to match original visual spacing around buttons
  padding: $spacing-1-5s 0;
}

.navSide {
  display: flex;
  flex-basis: 33%; // Example sizing - adjust as needed
  align-items: center;

  // gap: $spacing-2s; // Use gap for spacing between items if multiple

  &:first-child {
    justify-content: flex-start;
  }

  &.navSideRight {
    // Modifier for the right side
    justify-content: flex-end;
  }
}

/* --- Desktop Overlay Styles (keep as is) --- */
.desktopNavigationOverlay {
  pointer-events: none;

  position: fixed;
  z-index: $header-z-index-overlay;
  top: 0;
  left: 0;

  width: 100%;
  height: 100vh;

  opacity: 0;
  background-color: $color-black-16;
  backdrop-filter: blur(8px);

  transition: opacity 0.3s ease-in-out 0.1s; // Added slight delay

  @include media-mobile {
    display: none;
  }

  // This selector needs review based on how menu state is actually managed.
  // If state is on header, it might be: .stickyHeader[data-menu-open='true'] + &
  // Or if state is managed differently, adjust accordingly.
  // header:has(.isActive) + &, // :has() support varies
  // [data-state="open"] + & { // Check if Radix/other library sets this
  //   opacity: 1;
  // }
}
